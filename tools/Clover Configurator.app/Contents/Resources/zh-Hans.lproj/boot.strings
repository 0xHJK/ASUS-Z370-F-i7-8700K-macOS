
/* Class = "NSMenuItem"; title = "-alcoff"; ObjectID = "0KN-En-cfk"; */
"0KN-En-cfk.title" = "-alcoff";

/* Class = "NSMenuItem"; title = "darkwake=10"; ObjectID = "0Sn-id-xDe"; */
"0Sn-id-xDe.title" = "darkwake=10";

/* Class = "NSMenuItem"; title = "-alcdbg"; ObjectID = "19j-Us-g0j"; */
"19j-Us-g0j.title" = "-alcdbg";

/* Class = "NSMenuItem"; title = "NoVPAJpeg"; ObjectID = "1AQ-Fn-G9y"; */
"1AQ-Fn-G9y.title" = "NoVPAJpeg";

/* Class = "NSMenu"; title = "AirportBrcmFixup"; ObjectID = "1XB-UL-K1E"; */
"1XB-UL-K1E.title" = "AirportBrcmFixup";

/* Class = "NSBox"; title = "Box"; ObjectID = "1kg-gk-ban"; */
"1kg-gk-ban.title" = "Box";

/* Class = "NSMenuItem"; title = "HibernationFixup"; ObjectID = "28B-o7-4QR"; */
"28B-o7-4QR.title" = "HibernationFixup";

/* Class = "NSTextFieldCell"; title = "Text Cell"; ObjectID = "2YA-Tz-B4Z"; */
"2YA-Tz-B4Z.title" = "Text Cell";

/* Class = "NSMenuItem"; title = "cpus=1"; ObjectID = "2lK-2g-pZx"; */
"2lK-2g-pZx.title" = "cpus=1";

/* Class = "NSMenu"; title = "NoVPAJpeg"; ObjectID = "2lx-Oc-JNa"; */
"2lx-Oc-JNa.title" = "NoVPAJpeg";

/* Class = "NSButton"; ibShadowedToolTip = "disable Clover's keyboard shortcuts"; ObjectID = "2ou-qM-F9Q"; */
"2ou-qM-F9Q.ibShadowedToolTip" = "禁用Clover的键盘快捷键";

/* Class = "NSButton"; ibShadowedToolTip = "Skip the Hibernation timeout"; ObjectID = "3SI-Go-M3B"; */
"3SI-Go-M3B.ibShadowedToolTip" = "跳过休眠超时";

/* Class = "NSMenuItem"; title = "-hbfxoff"; ObjectID = "3a3-sl-paf"; */
"3a3-sl-paf.title" = "-hbfxoff";

/* Class = "NSPopUpButton"; ibShadowedToolTip = "Policy for Secure Boot. Using WhiteList and BlackList require an array of allowed and denied binary"; ObjectID = "3c7-hz-Sd8"; */
"3c7-hz-Sd8.ibShadowedToolTip" = "安全启动策略。使用WhiteList和BlackList需要允许和拒绝二进制数组";

/* Class = "NSMenuItem"; title = "smcdebug=0xff"; ObjectID = "3tF-ap-oot"; */
"3tF-ap-oot.title" = "smcdebug=0xff";

/* Class = "NSMenuItem"; title = "darkwake=4"; ObjectID = "3tf-Ua-ShM"; */
"3tf-Ua-ShM.title" = "darkwake=4";

/* Class = "NSMenuItem"; title = "User"; ObjectID = "3ww-WE-Sc8"; */
"3ww-WE-Sc8.title" = "用户(User)";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Debug</key>\n<false/>\nIf you are unable to boot into the Clover you can use this setting to produces a debug output to /EFI/CLOVER/misc/debug.log. This log then can be assessed to find out what the problem is. !WARNING turning on this log will dramatically increase loading time as it has to write the log to the disk as it goes. So please be patient and give plenty of time before reseting your computer."; ObjectID = "4Wo-7U-l4l"; */
"4Wo-7U-l4l.ibShadowedToolTip" = "<key>Debug</key>\n<false/>\n\n如果您无法启动Clover，则可以使用此设置为/EFI/CLOVER/misc/debug.log生成调试输出。然后可以评估该日志以找出问题所在。 ！警告打开此日志会大大增加加载时间，因为它必须将日志写入磁盘。因此，请在重置计算机之前保持耐心并留出足够的时间。";

/* Class = "NSMenuItem"; title = "darkwake=no"; ObjectID = "4lO-3n-Nc2"; */
"4lO-3n-Nc2.title" = "darkwake=no";

/* Class = "NSButtonCell"; title = "SignatureFixup"; ObjectID = "4rX-ou-Vrd"; */
"4rX-ou-Vrd.title" = "签名修复";

/* Class = "NSTableColumn"; headerCell.title = "Whitelist"; ObjectID = "59v-8C-IRT"; */
"59v-8C-IRT.headerCell.title" = "白名单(Whitelist)";

/* Class = "NSMenuItem"; title = "PBRsata"; ObjectID = "5Cg-Dw-6z7"; */
"5Cg-Dw-6z7.title" = "PBRsata";

/* Class = "NSButtonCell"; title = "Fast"; ObjectID = "5LP-3O-i4f"; */
"5LP-3O-i4f.title" = "快速";

/* Class = "NSMenuItem"; title = "Lilu"; ObjectID = "5RY-Vn-NWe"; */
"5RY-Vn-NWe.title" = "Lilu";

/* Class = "NSMenuItem"; title = "-igfxdump"; ObjectID = "5hw-bw-8fi"; */
"5hw-bw-8fi.title" = "-igfxdump";

/* Class = "NSMenuItem"; title = "Allow"; ObjectID = "6Xk-OR-Chz"; */
"6Xk-OR-Chz.title" = "允许(Allow)";

/* Class = "NSMenuItem"; title = "CPUFriend"; ObjectID = "6fK-no-jmD"; */
"6fK-no-jmD.title" = "CPUFriend";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>Timeout</key>\n<integer>5</integer>\nThe boot loader will pause for 5 seconds after starting before automatically loading an operating system. If a key is pressed during this period of time, the countdown is stopped. Options:\n\n0 - GUI is not invoked, the OS is loaded instantly\n-1 - GUI is invoked, automatic OS loading is turned off\nClover must have be able to find a default entry for it to automatically boot into an OS.\n\nNOTE: If the Timeout integer is set to 0, hold any key when powering on to invoke the bootloader GUI."; ObjectID = "6h3-7F-Ex1"; */
"6h3-7F-Ex1.ibShadowedToolTip" = "<key>Timeout</key>\n<integer>5</integer>\n\n启动后启动加载程序将暂停5秒钟，然后自动加载操作系统。如果在这段时间内按下某个键，则倒计时停止。选项：\n\n0 - 未调用GUI，即时加载操作系统\n\n-1 - 调用GUI，关闭自动OS加载\n\nClover必须能够找到一个默认条目才能自动启动到操作系统。\n\n注意：如果Timeout整数设置为0，则在打开电源时按住任意键以调用引导加载程序GUI。";

/* Class = "NSBox"; title = "Arguments"; ObjectID = "6ph-2A-PZj"; */
"6ph-2A-PZj.title" = "参数";

/* Class = "NSTableView"; ibShadowedToolTip = "White list for Secure Boot (allowed). Policy must be set to WhiteList"; ObjectID = "6sX-vb-IgQ"; */
"6sX-vb-IgQ.ibShadowedToolTip" = "安全启动白名单（允许）。策略必须设置为WhiteList";

/* Class = "NSMenuItem"; title = "-vsmcbeta"; ObjectID = "7Hb-ao-vgo"; */
"7Hb-ao-vgo.title" = "-vsmcbeta";

/* Class = "NSMenuItem"; title = "-liluuseroff"; ObjectID = "7gv-Wb-XhG"; */
"7gv-Wb-XhG.title" = "-liluuseroff";

/* Class = "NSMenuItem"; title = "CPUFriend"; ObjectID = "7yW-Dq-Kdt"; */
"7yW-Dq-Kdt.title" = "CPUFriend";

/* Class = "NSMenuItem"; title = "-gux_no_idle"; ObjectID = "8WF-c6-dqo"; */
"8WF-c6-dqo.title" = "-gux_no_idle";

/* Class = "NSMenuItem"; title = "npci=0x2000"; ObjectID = "8WH-Io-33I"; */
"8WH-Io-33I.title" = "npci=0x2000";

/* Class = "NSMenuItem"; title = "kextlog=0xffff"; ObjectID = "8ki-el-sHY"; */
"8ki-el-sHY.title" = "kextlog=0xffff";

/* Class = "NSMenuItem"; title = "darkwake=1"; ObjectID = "927-b8-GN7"; */
"927-b8-GN7.title" = "darkwake=1";

/* Class = "NSMenuItem"; title = "-vsmcoff"; ObjectID = "AJU-zn-Dp0"; */
"AJU-zn-Dp0.title" = "-vsmcoff";

/* Class = "NSButtonCell"; title = "DisableCloverHotkeys"; ObjectID = "Ak4-p4-dX6"; */
"Ak4-p4-dX6.title" = "禁用Clover热键";

/* Class = "NSMenuItem"; title = "-hbfxbeta"; ObjectID = "AnY-oY-8Pj"; */
"AnY-oY-8Pj.title" = "-hbfxbeta";

/* Class = "NSMenuItem"; title = "-liludbg"; ObjectID = "B8P-2L-q46"; */
"B8P-2L-q46.title" = "-liludbg";

/* Class = "NSMenuItem"; title = "agdpmod=ignore"; ObjectID = "B9r-Hk-0b1"; */
"B9r-Hk-0b1.title" = "agdpmod=ignore";

/* Class = "NSMenuItem"; title = "Deny"; ObjectID = "BGs-RK-ieY"; */
"BGs-RK-ieY.title" = "拒绝(Deny)";

/* Class = "NSButtonCell"; title = "Secure"; ObjectID = "BoV-W6-Qjb"; */
"BoV-W6-Qjb.title" = "安全";

/* Class = "NSMenuItem"; title = "BT4LEContiunityFixup"; ObjectID = "C73-wN-DDm"; */
"C73-wN-DDm.title" = "BT4LEContiunityFixup";

/* Class = "NSMenuItem"; title = "wl_msg_level=0xXXXX"; ObjectID = "CES-Z1-lhd"; */
"CES-Z1-lhd.title" = "wl_msg_level=0xXXXX";

/* Class = "NSButton"; ibShadowedToolTip = "In the case when ordinary boot failed the boot.efi can set flag \"recovery-boot-mode\". It is not reliable for us and we want just ignore this variable to boot ordinary."; ObjectID = "Ch7-ok-KtP"; */
"Ch7-ok-KtP.ibShadowedToolTip" = "In the case when ordinary boot failed the boot.efi can set flag \"recovery-boot-mode\". It is not reliable for us and we want just ignore this variable to boot ordinary.";

/* Class = "NSMenu"; title = "BT4LEContiunityFixup"; ObjectID = "Cjb-Fd-AP2"; */
"Cjb-Fd-AP2.title" = "BT4LEContiunityFixup";

/* Class = "NSMenuItem"; title = "agdpmod=pikera"; ObjectID = "DfB-Y0-4HN"; */
"DfB-Y0-4HN.title" = "agdpmod=pikera";

/* Class = "NSMenuItem"; title = "VirtualSMC"; ObjectID = "DhR-fI-ee8"; */
"DhR-fI-ee8.title" = "VirtualSMC";

/* Class = "NSMenuItem"; title = "-disablegfxfirmware"; ObjectID = "Dmt-Bp-NxE"; */
"Dmt-Bp-NxE.title" = "-disablegfxfirmware";

/* Class = "NSMenuItem"; title = "Query"; ObjectID = "EOj-0x-mOs"; */
"EOj-0x-mOs.title" = "询问(Query)";

/* Class = "NSSegmentedCell"; EdP-2p-3FV.ibShadowedLabels[0] = "XMPDetection=Yes"; ObjectID = "EdP-2p-3FV"; */
"EdP-2p-3FV.ibShadowedLabels[0]" = "XMPDetection=Yes";

/* Class = "NSSegmentedCell"; EdP-2p-3FV.ibShadowedLabels[1] = "No"; ObjectID = "EdP-2p-3FV"; */
"EdP-2p-3FV.ibShadowedLabels[1]" = "No";

/* Class = "NSSegmentedCell"; EdP-2p-3FV.ibShadowedLabels[2] = "1"; ObjectID = "EdP-2p-3FV"; */
"EdP-2p-3FV.ibShadowedLabels[2]" = "1";

/* Class = "NSSegmentedCell"; EdP-2p-3FV.ibShadowedLabels[3] = "2"; ObjectID = "EdP-2p-3FV"; */
"EdP-2p-3FV.ibShadowedLabels[3]" = "2";

/* Class = "NSMenuItem"; title = "-radvesa"; ObjectID = "Gu2-4l-BPb"; */
"Gu2-4l-BPb.title" = "-radvesa";

/* Class = "NSTextFieldCell"; title = "LegacyBiosDefaultEntry"; ObjectID = "Gvt-XE-woX"; */
"Gvt-XE-woX.title" = "LegacyBiosDefaultEntry";

/* Class = "NSComboBoxCell"; HaA-HX-oVY.ibShadowedObjectValues[0] = "LastBootedVolume"; ObjectID = "HaA-HX-oVY"; */
"HaA-HX-oVY.ibShadowedObjectValues[0]" = "LastBootedVolume";

/* Class = "NSButtonCell"; title = "-1"; ObjectID = "HoS-n3-HO4"; */
"HoS-n3-HO4.title" = "-1";

/* Class = "NSMenuItem"; title = "-cpufoff"; ObjectID = "IAh-yq-ECC"; */
"IAh-yq-ECC.title" = "-cpufoff";

/* Class = "NSButtonCell"; title = "NoEarlyProgress"; ObjectID = "ITR-6n-URu"; */
"ITR-6n-URu.title" = "不显示启动前信息";

/* Class = "NSMenuItem"; title = "NoVPAJpeg"; ObjectID = "IiY-em-gOI"; */
"IiY-em-gOI.title" = "NoVPAJpeg";

/* Class = "NSMenu"; title = "Lilu"; ObjectID = "Ire-cK-fmx"; */
"Ire-cK-fmx.title" = "Lilu";

/* Class = "NSMenuItem"; title = "-lilubeta"; ObjectID = "J7f-JQ-Lvv"; */
"J7f-JQ-Lvv.title" = "-lilubeta";

/* Class = "NSMenuItem"; title = "-gux_defer_usb2"; ObjectID = "JBW-ch-cR1"; */
"JBW-ch-cR1.title" = "-gux_defer_usb2";

/* Class = "NSMenuItem"; title = "nvda_drv=1"; ObjectID = "JCk-dT-02u"; */
"JCk-dT-02u.title" = "nvda_drv=1";

/* Class = "NSMenuItem"; title = "nv_spanmodepolicy=1"; ObjectID = "JJN-3b-Yi2"; */
"JJN-3b-Yi2.title" = "nv_spanmodepolicy=1";

/* Class = "NSSegmentedControl"; ibShadowedToolTip = "<key>XMPDetection</key>\n<true/> OR <false/> OR <string>Yes/No</string>\nDetect best eXtreme Memory Profile when detecting memory or disable XMP detection.\n\n<key>XMPDetection</key>\n<integer>1/2</integer>"; ObjectID = "Jix-7R-EdR"; */
"Jix-7R-EdR.ibShadowedToolTip" = "<key>XMPDetection</key>\n<true/>或<false/>或<string>Yes/No</string>\n检测到内存或禁用XMP检测时，检测最佳eXtreme Memory Profile。\n\n<key>XMPDetection</key><integer>1/2</integer>";

/* Class = "NSButton"; ibShadowedToolTip = "A data leak issue was identified in the hibernation code, allowing hibernation encryption key to be passed to the system through RTC and preserved till the next hibernation without a subsequent erase. More details could be found in this message. To workaround this issue a new option enabling RTC memory erase upon waking from hibernation was added:\nBoot → RtcHibernateAware﻿﻿ = YES (BOOLEAN, off by default)\n \nThis option relies on a poorly documented (or rather undocumented) RTC memory access, and unspecified RTC memory layout, which is implementation-specific. While it is extremely recommended to be turned on if you rely on hibernation, it may not work on your hardware (should be fine on Ivy Bridge and newer at least), and is thus optional and disabled by default.\n \nNote, that AppleRTC or FixRTC patches effectively break hibernation by reducing the available RTC memory and avoiding encryption key preservation. You should DISABLE them if you have no issues with BIOS preferences afterwards or use HibernationFixup. However, if RtcHibernateAware does not work for you, enabling AppleRTC patch and using HibernationFixup may be a safer workaround."; ObjectID = "Jl7-Yz-DVL"; */
"Jl7-Yz-DVL.ibShadowedToolTip" = "在休眠代码中识别出数据泄漏问题，允许休眠加密密钥通过RTC传递到系统并保存到下一次休眠而不进行后续擦除。 可以在此消息中找到更多详细信息。 为了解决此问题，添加了一个新的选项，可以在从休眠状态唤醒时擦除RTC内存：\n\nBoot→RtcHibernateAware = YES（BOOLEAN，默认情况下关闭）\n\n\n \n此选项依赖于文档记录较差（或无法记录）的RTC内存访问，以及未指定的RTC内存布局，这是特定于实现的。 虽然如果您依赖休眠时非常建议打开它，但它可能无法在您的硬件上运行（至少应该在Ivy Bridge上更好），因此默认情况下是可选的并禁用。\n\n\n \n请注意，AppleRTC或FixRTC补丁通过减少可用的RTC内存并避免加密密钥保存来有效地中断休眠。 如果您之后没有BIOS偏好问题或使用HibernationFixup，您应该禁用它们。 但是，如果RtcHibernateAware不适合您，启用AppleRTC补丁并使用HibernationFixup可能是一种更安全的解决方法。";

/* Class = "NSMenuItem"; title = "BT4LEContiunityFixup"; ObjectID = "JvT-TG-4fW"; */
"JvT-TG-4fW.title" = "BT4LEContiunityFixup";

/* Class = "NSMenuItem"; title = "-igfxfbdump"; ObjectID = "KN1-gr-RPX"; */
"KN1-gr-RPX.title" = "-igfxfbdump";

/* Class = "NSMenuItem"; title = "-liludbgall"; ObjectID = "KV2-G9-V5v"; */
"KV2-G9-V5v.title" = "-liludbgall";

/* Class = "NSMenuItem"; title = "-bt4lefxbeta"; ObjectID = "KYH-09-PEV"; */
"KYH-09-PEV.title" = "-bt4lefxbeta";

/* Class = "NSMenuItem"; title = "AirportBrcmFixup"; ObjectID = "Khl-1I-Gnb"; */
"Khl-1I-Gnb.title" = "AirportBrcmFixup";

/* Class = "NSMenuItem"; title = "igfxsnb=0"; ObjectID = "Koe-N8-Th3"; */
"Koe-N8-Th3.title" = "igfxsnb=0";

/* Class = "NSMenuItem"; title = "watchdog=0"; ObjectID = "LBh-q0-N94"; */
"LBh-q0-N94.title" = "watchdog=0";

/* Class = "NSMenuItem"; title = "nv_disable=1"; ObjectID = "Lme-47-NLs"; */
"Lme-47-NLs.title" = "nv_disable=1";

/* Class = "NSMenuItem"; title = "-novpaoff"; ObjectID = "LoI-fv-o6v"; */
"LoI-fv-o6v.title" = "-novpaoff";

/* Class = "NSMenuItem"; title = "Lilu"; ObjectID = "Lqm-8F-U7g"; */
"Lqm-8F-U7g.title" = "Lilu";

/* Class = "NSPopUpButton"; ibShadowedToolTip = "<key>Legacy</key>\n<string>PBR</string>\nNecessary for loading old versions of Windows and Linux. Greatly depends on hardware and BIOS. Several algorithms were developed to allow customisation:\n\nLegacyBiosDefault - for UEFI BIOS variants containing protocol LegacyBios\nPBRtest - PBR boot algorithm\nPBR - Another PBR boot algorithm\nAdditionally for UEFI boot you may specify which HDD to boot (not only the first one).\n\n<key>Legacy</key>\n<string>LegacyBiosDefault</string>\n<key>LegacyBiosDefaultEntry</key>\n<integer>2</integer>"; ObjectID = "MRU-pn-ell"; */
"MRU-pn-ell.ibShadowedToolTip" = "<key>Legacy</key>\n<string>PBR</string>\n\n必须加载旧版本的Windows和Linux。很大程度上取决于硬件和BIOS。开发了几种算法以允许定制：\n\n\n\nLegacyBiosDefault - 适用于包含LegacyBios协议的UEFI BIOS变体\n\nPBRtest - PBR启动算法\n\nPBR - 另一种PBR启动算法\n\nA此外，对于UEFI引导，您可以指定要引导的HDD（不仅是第一个）。\n<key>Legacy</key>\n<string>LegacyBiosDefault</string>\n<key>LegacyBiosDefaultEntry</key>\n<integer>2</integer>";

/* Class = "NSMenuItem"; title = "HibernationFixup"; ObjectID = "N28-LK-r8e"; */
"N28-LK-r8e.title" = "休眠修复";

/* Class = "NSTextFieldCell"; title = "Timeout"; ObjectID = "NVa-Le-yYd"; */
"NVa-Le-yYd.title" = "等待时间";

/* Class = "NSMenuItem"; title = "lilucpu=N"; ObjectID = "Nh1-wX-51t"; */
"Nh1-wX-51t.title" = "lilucpu=N";

/* Class = "NSMenuItem"; title = "vsmcgen=X"; ObjectID = "NhK-vo-lgC"; */
"NhK-vo-lgC.title" = "vsmcgen=X";

/* Class = "NSMenuItem"; title = "-x"; ObjectID = "O8Y-su-LKg"; */
"O8Y-su-LKg.title" = "-x";

/* Class = "NSMenuItem"; title = "applbkl=0"; ObjectID = "Oc3-hj-1Pf"; */
"Oc3-hj-1Pf.title" = "applbkl=0";

/* Class = "NSMenuItem"; title = "Insert"; ObjectID = "Ojg-Ia-FpJ"; */
"Ojg-Ia-FpJ.title" = "插入(Insert)";

/* Class = "NSMenuItem"; title = "-brcmfxoff"; ObjectID = "PUD-Cp-m2X"; */
"PUD-Cp-m2X.title" = "-brcmfxoff";

/* Class = "NSMenuItem"; title = "vsmcslvl=X"; ObjectID = "Pgs-aX-zBM"; */
"Pgs-aX-zBM.title" = "vsmcslvl=X";

/* Class = "NSMenuItem"; title = "AppleALC"; ObjectID = "Qjs-bc-IMG"; */
"Qjs-bc-IMG.title" = "AppleALC";

/* Class = "NSTableColumn"; headerCell.title = "Blacklist"; ObjectID = "Qlg-b6-nVV"; */
"Qlg-b6-nVV.headerCell.title" = "黑名单(Blacklist)";

/* Class = "NSMenuItem"; title = "-wegbeta"; ObjectID = "QoB-yN-N3S"; */
"QoB-yN-N3S.title" = "-wegbeta";

/* Class = "NSMenuItem"; title = "igfxcflbklt=1"; ObjectID = "R0e-VQ-Wbd"; */
"R0e-VQ-Wbd.title" = "igfxcflbklt=1";

/* Class = "NSMenuItem"; title = "VirtualSMC"; ObjectID = "RFG-PW-JPZ"; */
"RFG-PW-JPZ.title" = "VirtualSMC";

/* Class = "NSMenuItem"; title = "-vsmcrpt"; ObjectID = "RdQ-nr-l5L"; */
"RdQ-nr-l5L.title" = "-vsmcrpt";

/* Class = "NSMenu"; title = "Help"; ObjectID = "Ry8-9p-YDp"; */
"Ry8-9p-YDp.title" = "帮助";

/* Class = "NSButtonCell"; title = "SkipHibernateTimeout"; ObjectID = "SdU-aA-UIx"; */
"SdU-aA-UIx.title" = "跳过休眠超时";

/* Class = "NSComboBoxCell"; ShO-J1-HON.ibShadowedObjectValues[0] = "Yes"; ObjectID = "ShO-J1-HON"; */
"ShO-J1-HON.ibShadowedObjectValues[0]" = "Yes";

/* Class = "NSComboBoxCell"; ShO-J1-HON.ibShadowedObjectValues[1] = "No"; ObjectID = "ShO-J1-HON"; */
"ShO-J1-HON.ibShadowedObjectValues[1]" = "No";

/* Class = "NSComboBoxCell"; ShO-J1-HON.ibShadowedObjectValues[2] = "Apple"; ObjectID = "ShO-J1-HON"; */
"ShO-J1-HON.ibShadowedObjectValues[2]" = "Apple";

/* Class = "NSComboBoxCell"; ShO-J1-HON.ibShadowedObjectValues[3] = "Alternate"; ObjectID = "ShO-J1-HON"; */
"ShO-J1-HON.ibShadowedObjectValues[3]" = "Alternate";

/* Class = "NSComboBoxCell"; ShO-J1-HON.ibShadowedObjectValues[4] = "Theme"; ObjectID = "ShO-J1-HON"; */
"ShO-J1-HON.ibShadowedObjectValues[4]" = "Theme";

/* Class = "NSComboBoxCell"; ShO-J1-HON.ibShadowedObjectValues[5] = "None"; ObjectID = "ShO-J1-HON"; */
"ShO-J1-HON.ibShadowedObjectValues[5]" = "None";

/* Class = "NSMenuItem"; title = "kext-dev-mode=1"; ObjectID = "TCq-Ge-uiE"; */
"TCq-Ge-uiE.title" = "kext-dev-mode=1";

/* Class = "NSMenuItem"; title = "darkwake=0"; ObjectID = "TyD-Xp-Ycm"; */
"TyD-Xp-Ycm.title" = "darkwake=0";

/* Class = "NSTextFieldCell"; title = "Text Cell"; ObjectID = "UIZ-tm-lPG"; */
"UIZ-tm-lPG.title" = "Text Cell";

/* Class = "NSMenuItem"; title = "LegacyBiosDefault"; ObjectID = "UVS-vq-1uM"; */
"UVS-vq-1uM.title" = "LegacyBiosDefault";

/* Class = "NSBox"; title = "Secure Boot"; ObjectID = "Uer-pj-fqj"; */
"Uer-pj-fqj.title" = "安全引导";

/* Class = "NSComboBox"; ibShadowedToolTip = "<key>DefaultVolume</key>\n<string>MacHDD</string>\nDefaultVolume is used to specify which entry is the default boot entry in Clover GUI. See also DefaultLoader. It can be set to:\n\nVolume Name - The name of the volume. E.g. Macintosh.\nGUID - Globally Unique ID of the volume shown in Clover's boot, preboot or debug log. E.g. 57272A5A-7EFE-4404-9CDA-C33761D0DB3C.\nPart of Device Path - Also shown in Clover's logs. E.g. HD(1,GPT,57272A5A-7EFE-4404-9CDA-C33761D0DB3C,0x800,0xFF000).\nLastBootedVolume - The last booted volume will be set as default one in Clover GUI.\nOS X Startup Disk can be used to reboot into another volume, but for the following reboot DefaultVolume will be used again."; ObjectID = "W4Z-vf-9Gr"; */
"W4Z-vf-9Gr.ibShadowedToolTip" = "<key>DefaultVolume</key>\n<string>MacHDD</string>\nDefaultVolume用于指定哪个条目是Clover GUI中的默认引导条目。另请参见DefaultLoader。它可以设置为：\n\n\n\nVolume Name - 卷的名称\n\n 例如: Macintosh.\n\nGUID - Clover的引导，预引导或调试日志中显示的卷的全局唯一ID。例如。\n 57272A5A-7EFE-4404-9CDA-C33761D0DB3C。\n\nPart of Device Path - 也在Clover的日志中显示。\n例如: HD(1,GPT,57272A5A-7EFE-4404-9CDA-C33761D0DB3C,0x800,0xFF000).\n\nLastBootedVolume - 最后一个引导的卷将在Clover GUI中设置为默认卷。\n\nOS X启动盘可用于重新启动到另一个卷，但对于以下重新启动，将再次使用DefaultVolume。";

/* Class = "NSMenuItem"; title = "PBRtest"; ObjectID = "WP8-OS-C6F"; */
"WP8-OS-C6F.title" = "PBRtest";

/* Class = "NSTableView"; ibShadowedToolTip = "<key>Arguments</key>\n<string>ARGUMENTS</string>\nAt this section you can add \"Boot Flags\" and \"Kernel Flags\" to be used by the system... Here we will list only Clover's proprietary \"Boot Flags\", different flags, like for example, npci=0x2000, npci=0x3000, darkwake=0, etc..., should work as expected...\n\n-v - Verbose Boot.\n-s - Boot OS X into Single User Mode.\n-x - Boot OS X into SafeBoot (Safe Mode).\nMountEFI=yes/diskX - Mount EFI partition at every boot or from disk X (X = disk number).\nLogLineCount=0 - Set maximum number of lines for log file, default 0 (no Limit).\nLogLocation=PATH - Set the path for the log files to be saved.\nLogEveryBoot=Yes/No\t- Save log files at every boot."; ObjectID = "WTT-ia-xfP"; */
"WTT-ia-xfP.ibShadowedToolTip" = "<key>Arguments</key>\n<string>ARGUMENTS</string>\n\n在本节中，您可以添加系统使用的\"Boot Flags\"和\"Kernel Flags\"...这里我们将仅列出Clover专有的\"Boot Flags\"，不同的标志，例如，\nnpci = 0x2000，npci = 0x3000 ，darkwake = 0等......应该按预期工作......\n\n-v - 详细启动模式(啰嗦模式）。\n\n-s - 将OS X引导至单用户模式。\n\n-x - 将OS X引导至SafeBoot（安全模式）。\nMountEFI=yes/diskX - 每次启动或从中挂载EFI分区 X (X = disk number).\n\nLogLineCount=0 - 设置日志文件的最大行数，默认为0（无限制）。\n\nLogLocation=PATH - 设置要保存的日志文件的路径。\n\nLogEveryBoot=Yes/No\t- 每次启动时保存日志文件。";

/* Class = "NSMenuItem"; title = "-v"; ObjectID = "WVb-Sr-e0P"; */
"WVb-Sr-e0P.title" = "-v";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Secure</key>\n<true/>\nSecure Boot protocol, a contorversial subject, will restrict the booting process to signed binaries only. By enabling this option in your BIOS, booting of many operating systems won't be possible anymore, except Windows 8, 2013 and some Linux distributions.\n\nThe aim is to use Clover while Secure Boot is enabled. Clover's binary will need to be signed and a certificate to be loaded."; ObjectID = "WsY-WH-EMR"; */
"WsY-WH-EMR.ibShadowedToolTip" = "<key>Secure</key>\n<true/>\n\n安全引导协议是一个受控主体，它仅将引导过程限制为已签名的二进制文件。通过在BIOS中启用此选项，除了Windows 8,2013和某些Linux发行版之外，将无法再启动许多操作系统。\n\n目的是在启用安全启动时使用Clover。需要签署Clover的二进制文件并加载证书。";

/* Class = "NSMenuItem"; title = "WhateverGreen"; ObjectID = "X4c-7u-z8H"; */
"X4c-7u-z8H.title" = "WhateverGreen";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Fast</key>\n<true/>\nSimilar to setting Timeout to 0 but: * nvram.plist will be searched only until first occurrence * does not search for the best video mode * does not load themes and graphics * no chance to enter the GUI\n\nHaving this parameter enabled might not really have any big effect.\nInstead, you can try a custom compilation: * disable GUI in CloverEFI (3 seconds difference) * only search for Sata0 drivers (9 seconds difference)"; ObjectID = "XJt-ur-AbR"; */
"XJt-ur-AbR.ibShadowedToolTip" = "<key>Fast</key>\n<true/>\n\n类似于将Timeout设置为0但是：* nvram.plist将仅搜索，直到第一次出现*不搜索最佳视频模式*不加载主题和图形*没有机会进入GUI\n\n\n\n启用此参数可能不会产生任何重大影响。\n\n相反，您可以尝试自定义编译：*在CloverEFI中禁用GUI（3秒差异）*仅搜索Sata0驱动程序（9秒差异）";

/* Class = "NSMenuItem"; title = "-hbfx-disable-patch-pci"; ObjectID = "XWM-sM-yiG"; */
"XWM-sM-yiG.title" = "-hbfx-disable-patch-pci";

/* Class = "NSButton"; ibShadowedToolTip = "Strict Hibernation, requires  UEFI, a real NVRAM, a GPT with ESP and a hibernate mode 25"; ObjectID = "XaP-uv-pDa"; */
"XaP-uv-pDa.ibShadowedToolTip" = "严格休眠，需要UEFI，真正的NVRAM，带ESP的GPT和休眠模式25";

/* Class = "NSMenuItem"; title = "wl_msg_level2=0xXXXX"; ObjectID = "XrZ-J8-05n"; */
"XrZ-J8-05n.title" = "wl_msg_level2=0xXXXX";

/* Class = "NSMenuItem"; title = "-liluoff"; ObjectID = "XsT-Sz-iGR"; */
"XsT-Sz-iGR.title" = "-liluoff";

/* Class = "NSMenu"; title = "Flyout"; ObjectID = "Y8c-at-bAF"; */
"Y8c-at-bAF.title" = "Flyout";

/* Class = "NSTableColumn"; headerCell.title = "Boot Arguments (right click context menu)"; ObjectID = "Ydc-N3-vnt"; */
"Ydc-N3-vnt.headerCell.title" = "引导参数(鼠标右键查看更多的参数)）";

/* Class = "NSTextFieldCell"; title = "Text Cell"; ObjectID = "Ylh-DR-1R6"; */
"Ylh-DR-1R6.title" = "Text Cell";

/* Class = "NSMenuItem"; title = "-vsmccomp"; ObjectID = "Z54-7Y-bMA"; */
"Z54-7Y-bMA.title" = "-vsmccomp";

/* Class = "NSButtonCell"; title = "NeverHibernate"; ObjectID = "ZEU-EH-nUA"; */
"ZEU-EH-nUA.title" = "从不休眠";

/* Class = "NSMenuItem"; title = "-igfxvesa"; ObjectID = "ZWk-vR-Sxe"; */
"ZWk-vR-Sxe.title" = "-igfxvesa";

/* Class = "NSMenuItem"; title = "rootless=0"; ObjectID = "a0S-Pz-JKo"; */
"a0S-Pz-JKo.title" = "rootless=0";

/* Class = "NSMenuItem"; title = "-wegdbg"; ObjectID = "aOU-uX-BZi"; */
"aOU-uX-BZi.title" = "-wegdbg";

/* Class = "NSMenuItem"; title = "NoTouchID"; ObjectID = "al6-jV-xks"; */
"al6-jV-xks.title" = "NoTouchID";

/* Class = "NSMenuItem"; title = "hbfx-patch-pci=XHC,IMEI,IGPU"; ObjectID = "bhy-0Z-HzY"; */
"bhy-0Z-HzY.title" = "hbfx-patch-pci=XHC,IMEI,IGPU";

/* Class = "NSMenu"; title = "NoTouchID"; ObjectID = "c4Q-IC-Ez0"; */
"c4Q-IC-Ez0.title" = "NoTouchID";

/* Class = "NSTableView"; ibShadowedToolTip = "Black list for Secure Boot (not allowed). Policy must be set to BlackList"; ObjectID = "d4m-0h-hax"; */
"d4m-0h-hax.ibShadowedToolTip" = "安全启动的黑名单（不允许）。策略必须设置为BlackList";

/* Class = "NSMenuItem"; title = "slide=0"; ObjectID = "d8h-9T-HHU"; */
"d8h-9T-HHU.title" = "slide=0";

/* Class = "NSButton"; ibShadowedToolTip = "<key>NeverHibernate</key>\n<true/>\nDisables the hibernation state detection."; ObjectID = "dLU-KX-GK6"; */
"dLU-KX-GK6.ibShadowedToolTip" = "<key>NeverHibernate</key>\n<true/>\n禁用休眠状态检测。";

/* Class = "NSMenuItem"; title = "-brcmfxdbg"; ObjectID = "dUn-bV-4eR"; */
"dUn-bV-4eR.title" = "-brcmfxdbg";

/* Class = "NSComboBox"; ibShadowedToolTip = "<key>CustomLogo</key>\n<true/> OR <false/> OR <string>Apple/Alternate/Theme/None/Path</string> OR <data>PNG/BMP/ICNS base64 data</data>\nEnable the drawing of the custom boot logo.\n\ntrue - Uses the default boot style, Apple.\nfalse - Disables custom boot logo.\nApple - Use the default gray on gray apple logo.\nAlternate - Use the alternate white on black apple logo.\nTheme - Use the theme boot screen for entry type - NOT IMPLEMENTED.\nNone - Use no logo only background color, gray if not specified by custom entry.\nPath - A file path to load a custom image from\n<data> - A base64 encoded PNG, BMP, or ICNS data.\nIf no option is specified then the boot screen will be drawn only for >= 10.10 Yosemite, so it remains compatible with previous behavior.\n\nThe CustomLogo key can also be used under GUI/Custom/Entries in conjunction with BootBgColor for a different screen for every OS. However, the graphics output protocol is not in anyway modified so if the OS draws after it is started then it is after the boot screen is drawn and will overwrite the custom logo, at least for now."; ObjectID = "dq6-TB-u6t"; */
"dq6-TB-u6t.ibShadowedToolTip" = "<key>CustomLogo</key>\n<true/>OR<false/>OR<string>Apple/Alternate/Theme/None/Path</string>OR<data>PNG/BMP/ICNS base64 data</data>\n启用自定义引导徽标的绘制。\n\n\n\ntrue -使用默认启动样式Apple。\n\nfalse - 禁用自定义启动徽标。\n\nApple - 使用灰色苹果徽标上的默认灰色。\n\nAlternate - 在黑色苹果标志上使用备用白色。\n\nTheme - 使用主题启动屏幕\n\nentry type - NOT IMPLEMENTED.\n\nNone - 不使用仅徽标背景颜色，如果未通过自定义条目指定，则为灰色。\n\nPath - 从加载自定义图像的文件路径 - base64编码的PNG，BMP或ICNS数据。\n如果未指定任何选项，则仅为>= 10.10 Yosemite绘制引导屏幕，因此它与先前的行为保持兼容。\n\n\n\nCustomLogo键也可以在GUI/Custom/Entries下与BootBgColor结合使用，用于每个操作系统的不同屏幕。但是，图形输出协议不会被修改，所以如果操作系统在启动后绘制，那么它是在绘制引导屏幕之后并且将覆盖自定义徽标，至少目前是这样。";

/* Class = "NSMenuItem"; title = "darkwake=8"; ObjectID = "e0w-Gm-109"; */
"e0w-Gm-109.title" = "darkwake=8";

/* Class = "NSMenuItem"; title = "ngfxsubmit=0"; ObjectID = "e9P-2X-2zM"; */
"e9P-2X-2zM.title" = "ngfxsubmit=0";

/* Class = "NSMenuItem"; title = "igfxgl=0"; ObjectID = "ebm-ge-WV8"; */
"ebm-ge-WV8.title" = "igfxgl=0";

/* Class = "NSTextFieldCell"; title = "Default Loader"; ObjectID = "et6-q0-0PN"; */
"et6-q0-0PN.title" = "默认引导文件";

/* Class = "NSTextFieldCell"; title = "Default Boot Volume"; ObjectID = "fba-fN-Cn7"; */
"fba-fN-Cn7.title" = "默认引导卷名";

/* Class = "NSMenuItem"; title = "NoTouchID"; ObjectID = "fip-d9-JxS"; */
"fip-d9-JxS.title" = "NoTouchID";

/* Class = "NSMenu"; title = "HibernationFixup"; ObjectID = "frj-Ko-Lo2"; */
"frj-Ko-Lo2.title" = "休眠修复";

/* Class = "NSMenuItem"; title = "igfxrst=1"; ObjectID = "hPr-4H-aa2"; */
"hPr-4H-aa2.title" = "igfxrst=1";

/* Class = "NSMenuItem"; title = "-wegoff"; ObjectID = "hby-NJ-GJ3"; */
"hby-NJ-GJ3.title" = "-wegoff";

/* Class = "NSMenuItem"; title = "-liluforce"; ObjectID = "hmc-ka-w2m"; */
"hmc-ka-w2m.title" = "-liluforce";

/* Class = "NSMenuItem"; title = "AppleALC"; ObjectID = "hnw-qo-35j"; */
"hnw-qo-35j.title" = "AppleALC";

/* Class = "NSMenuItem"; title = "-hbfx-dump-nvram"; ObjectID = "iFO-yi-g2v"; */
"iFO-yi-g2v.title" = "-hbfx-dump-nvram";

/* Class = "NSMenuItem"; title = "-raddvi"; ObjectID = "iGK-kh-DBw"; */
"iGK-kh-DBw.title" = "-raddvi";

/* Class = "NSMenuItem"; title = "-cdfon"; ObjectID = "irO-tL-Bdf"; */
"irO-tL-Bdf.title" = "-cdfon";

/* Class = "NSMenuItem"; title = "liludelay=1000"; ObjectID = "j15-Wi-k1G"; */
"j15-Wi-k1G.title" = "liludelay=1000";

/* Class = "NSMenuItem"; title = "-alcbeta"; ObjectID = "j6b-YE-VhZ"; */
"j6b-YE-VhZ.title" = "-alcbeta";

/* Class = "NSButtonCell"; title = "NeverDoRecovery"; ObjectID = "jh2-eR-76U"; */
"jh2-eR-76U.title" = "禁用恢复卷";

/* Class = "NSMenuItem"; title = "npci=0x3000"; ObjectID = "jvi-SL-u1y"; */
"jvi-SL-u1y.title" = "npci=0x3000";

/* Class = "NSButtonCell"; title = "RtcHibernateAware"; ObjectID = "jwf-st-2MV"; */
"jwf-st-2MV.title" = "唤醒时内存擦除";

/* Class = "NSMenu"; title = "CPUFriend"; ObjectID = "kXC-fw-85N"; */
"kXC-fw-85N.title" = "CPUFriend";

/* Class = "NSMenuItem"; title = "-lilulowmem"; ObjectID = "l34-qe-2ra"; */
"l34-qe-2ra.title" = "-lilulowmem";

/* Class = "NSBox"; title = "Box"; ObjectID = "l3C-ey-dfa"; */
"l3C-ey-dfa.title" = "Box";

/* Class = "NSMenuItem"; title = "PBR"; ObjectID = "lbM-Xa-rwD"; */
"lbM-Xa-rwD.title" = "PBR";

/* Class = "NSMenuItem"; title = "debug=0x100"; ObjectID = "ld8-oF-aYV"; */
"ld8-oF-aYV.title" = "debug=0x100";

/* Class = "NSButtonCell"; title = "HibernationFixup"; ObjectID = "luL-iz-gj0"; */
"luL-iz-gj0.title" = "休眠修复";

/* Class = "NSMenuItem"; title = "-cpufbeta"; ObjectID = "mUz-Li-vVg"; */
"mUz-Li-vVg.title" = "-cpufbeta";

/* Class = "NSMenuItem"; title = "-s"; ObjectID = "mdG-dI-MSG"; */
"mdG-dI-MSG.title" = "-s";

/* Class = "NSMenuItem"; title = "-nehalem_error_disable"; ObjectID = "nCB-9x-6Q7"; */
"nCB-9x-6Q7.title" = "-nehalem_error_disable";

/* Class = "NSMenu"; title = "WhateverGreen"; ObjectID = "nCx-ic-EeX"; */
"nCx-ic-EeX.title" = "WhateverGreen";

/* Class = "NSMenuItem"; title = "-vsmcdbg"; ObjectID = "nUf-27-o2D"; */
"nUf-27-o2D.title" = "-vsmcdbg";

/* Class = "NSMenuItem"; title = "-nobiooff"; ObjectID = "nrW-ea-LJJ"; */
"nrW-ea-LJJ.title" = "-nobiooff";

/* Class = "NSMenuItem"; title = "agdpmod=vit9696"; ObjectID = "o1l-0w-R0Q"; */
"o1l-0w-R0Q.title" = "agdpmod=vit9696";

/* Class = "NSButtonCell"; title = "StrictHibernate"; ObjectID = "oaS-cB-35Q"; */
"oaS-cB-35Q.title" = "严格休眠";

/* Class = "NSMenuItem"; title = "Help"; ObjectID = "ofj-iB-WDq"; */
"ofj-iB-WDq.title" = "帮助";

/* Class = "NSTextFieldCell"; title = "CustomLogo"; ObjectID = "onm-eg-9us"; */
"onm-eg-9us.title" = "自定义LOGO";

/* Class = "NSMenuItem"; title = "alcid=layout-id"; ObjectID = "oth-Ka-kmW"; */
"oth-Ka-kmW.title" = "alcid=layout-id";

/* Class = "NSMenuItem"; title = "-novpabeta"; ObjectID = "pOl-ku-Lbi"; */
"pOl-ku-Lbi.title" = "-novpabeta";

/* Class = "NSMenuItem"; title = "keepsyms=1"; ObjectID = "pQM-nj-eKR"; */
"pQM-nj-eKR.title" = "keepsyms=1";

/* Class = "NSButtonCell"; title = "Debug"; ObjectID = "pXP-2b-zmv"; */
"pXP-2b-zmv.title" = "启用调试输出日志";

/* Class = "NSMenuItem"; title = "ngfxgl=1"; ObjectID = "pbY-b9-Ufy"; */
"pbY-b9-Ufy.title" = "ngfxgl=1";

/* Class = "NSMenuItem"; title = "-brcmfxbeta"; ObjectID = "pgT-FG-4CU"; */
"pgT-FG-4CU.title" = "-brcmfxbeta";

/* Class = "NSMenuItem"; title = "-gux_nosleep"; ObjectID = "pkR-zV-erw"; */
"pkR-zV-erw.title" = "-gux_nosleep";

/* Class = "NSMenuItem"; title = "enable-cfl-backlight-fix"; ObjectID = "qOQ-lV-yJy"; */
"qOQ-lV-yJy.title" = "enable-cfl-backlight-fix";

/* Class = "NSMenuItem"; title = "-brcmfxwowl"; ObjectID = "qrL-Ja-9rC"; */
"qrL-Ja-9rC.title" = "-brcmfxwowl";

/* Class = "NSMenuItem"; title = "WhateverGreen"; ObjectID = "rIp-zF-19W"; */
"rIp-zF-19W.title" = "WhateverGreen";

/* Class = "NSMenuItem"; title = "WhiteList"; ObjectID = "rNu-rl-Krf"; */
"rNu-rl-Krf.title" = "白名单(WhiteList)";

/* Class = "NSMenu"; title = "AppleALC"; ObjectID = "rUy-Aj-ZWa"; */
"rUy-Aj-ZWa.title" = "AppleALC";

/* Class = "NSMenuItem"; title = "-rad24"; ObjectID = "rZi-MF-icD"; */
"rZi-MF-icD.title" = "-rad24";

/* Class = "NSMenuItem"; title = "-gux_nomsi"; ObjectID = "rvo-0n-bxL"; */
"rvo-0n-bxL.title" = "-gux_nomsi";

/* Class = "NSMenuItem"; title = "radpg=15"; ObjectID = "ryn-53-Otf"; */
"ryn-53-Otf.title" = "radpg=15";

/* Class = "NSMenuItem"; title = "-hbfxdbg"; ObjectID = "sav-AB-cLz"; */
"sav-AB-cLz.title" = "-hbfxdbg";

/* Class = "NSMenuItem"; title = "-xcpm"; ObjectID = "seC-Fi-nwe"; */
"seC-Fi-nwe.title" = "-xcpm";

/* Class = "NSButton"; ibShadowedToolTip = "Hide some debug messages while Clover is loading"; ObjectID = "sj2-ly-IP6"; */
"sj2-ly-IP6.ibShadowedToolTip" = "在启动Clover时隐藏一些启动前的信息";

/* Class = "NSMenuItem"; title = "dart=0"; ObjectID = "slZ-FH-urz"; */
"slZ-FH-urz.title" = "dart=0";

/* Class = "NSMenu"; title = "VirtualSMC"; ObjectID = "t1z-iP-Dzt"; */
"t1z-iP-Dzt.title" = "VirtualSMC";

/* Class = "NSMenuItem"; title = "-lilubetaall"; ObjectID = "tKD-ov-wP1"; */
"tKD-ov-wP1.title" = "-lilubetaall";

/* Class = "NSMenuItem"; title = "vsmchbkp=X"; ObjectID = "tQE-7Q-Iiu"; */
"tQE-7Q-Iiu.title" = "vsmchbkp=X";

/* Class = "NSMenuItem"; title = "darkwake=2"; ObjectID = "tUV-iA-Imk"; */
"tUV-iA-Imk.title" = "darkwake=2";

/* Class = "NSMenuItem"; title = "ngfxcompat=1"; ObjectID = "tgj-yh-f6h"; */
"tgj-yh-f6h.title" = "ngfxcompat=1";

/* Class = "NSBox"; title = "Box"; ObjectID = "tzA-gb-3b0"; */
"tzA-gb-3b0.title" = "Box";

/* Class = "NSMenuItem"; title = "-bt4lefxdbg"; ObjectID = "u12-yg-vwM"; */
"u12-yg-vwM.title" = "-bt4lefxdbg";

/* Class = "NSMenuItem"; title = "-cpufdbg"; ObjectID = "u7J-Ap-4dr"; */
"u7J-Ap-4dr.title" = "-cpufdbg";

/* Class = "NSMenuItem"; title = "-liluslow"; ObjectID = "uFP-KZ-PGJ"; */
"uFP-KZ-PGJ.title" = "-liluslow";

/* Class = "NSMenuItem"; title = "darkwake=3"; ObjectID = "uUS-5I-bp0"; */
"uUS-5I-bp0.title" = "darkwake=3";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>DefaultLoader</key>\n<string>BOOTX64.efi</string>\nIn addition to DefaultVolume above, the path of the loader can be specified as DefaultLoader. This provides more precise default entry selection for Volumes that have multiple Loaders. The value can be the complete path or a unique portion like like file name."; ObjectID = "uqt-fc-Hj8"; */
"uqt-fc-Hj8.ibShadowedToolTip" = "<key>DefaultLoader</key>\n<string>BOOTX64.efi</string>\n\n除了上面的DefaultVolume之外，加载器的路径可以指定为DefaultLoader。这为具有多个引导其的卷提供了更精确的默认条目选择。值可以是完整路径或类似文件名的唯一部分。";

/* Class = "NSMenuItem"; title = "BlackList"; ObjectID = "vn5-BG-G06"; */
"vn5-BG-G06.title" = "黑名单(BlackList)";

/* Class = "NSMenu"; title = "Darkwake"; ObjectID = "w1M-eM-aS4"; */
"w1M-eM-aS4.title" = "Darkwake";

/* Class = "NSMenuItem"; title = "AirportBrcmFixup"; ObjectID = "wWA-vE-IK5"; */
"wWA-vE-IK5.title" = "AirportBrcmFixup";

/* Class = "NSMenuItem"; title = "liludump=N"; ObjectID = "x7N-k0-EoZ"; */
"x7N-k0-EoZ.title" = "liludump=N";

/* Class = "NSMenuItem"; title = "igfxframe=frame"; ObjectID = "xbv-6t-AMf"; */
"xbv-6t-AMf.title" = "igfxframe=frame";

/* Class = "NSMenuItem"; title = "-nobiobeta"; ObjectID = "xk0-HQ-uXj"; */
"xk0-HQ-uXj.title" = "-nobiobeta";

/* Class = "NSMenuItem"; title = "Darkwake"; ObjectID = "xuD-AH-gjZ"; */
"xuD-AH-gjZ.title" = "Darkwake";

/* Class = "NSMenuItem"; title = "-bt4lefxoff"; ObjectID = "xxN-mT-MbH"; */
"xxN-mT-MbH.title" = "-bt4lefxoff";

/* Class = "NSMenuItem"; title = "brcmfx-country=XX"; ObjectID = "yJs-Ll-0CD"; */
"yJs-Ll-0CD.title" = "brcmfx-country=XX";

/* Class = "NSTextFieldCell"; title = "Legacy"; ObjectID = "ykO-wZ-KUy"; */
"ykO-wZ-KUy.title" = "传统引导";

/* Class = "NSMenuItem"; title = "-igfxnohdmi"; ObjectID = "z1o-ci-RHe"; */
"z1o-ci-RHe.title" = "-igfxnohdmi";

/* Class = "NSMenuItem"; title = "enable-hdmi20"; ObjectID = "zBH-OX-jxw"; */
"zBH-OX-jxw.title" = "enable-hdmi20";

/* Class = "NSMenuItem"; title = "-wegnoegpu"; ObjectID = "zPq-ju-XkU"; */
"zPq-ju-XkU.title" = "-wegnoegpu";

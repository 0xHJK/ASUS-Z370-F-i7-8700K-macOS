
/* Class = "NSTextField"; ibShadowedToolTip = "Location in chassis, cosmetic only. \nIf not set Clover use \"Part Component\"."; ObjectID = "0AW-AB-6IT"; */
"0AW-AB-6IT.ibShadowedToolTip" = "Location in chassis, 仅限装饰。\n如果未设置Clover，请使用\"Part Component\"。";

/* Class = "NSTextFieldCell"; title = "Board Type"; ObjectID = "0Bt-Uq-abc"; */
"0Bt-Uq-abc.title" = "Board Type";

/* Class = "NSTextFieldCell"; title = "Platform Feature"; ObjectID = "0GT-bB-c9d"; */
"0GT-bB-c9d.title" = "Platform Feature";

/* Class = "NSTextFieldCell"; title = "Firmware Features Mask"; ObjectID = "0n5-Pc-2wK"; */
"0n5-Pc-2wK.title" = "Firmware Features Mask";

/* Class = "NSTextField"; ibShadowedToolTip = "Manufacturer, same as BiosVendor. \nClover knows what to do, no need to set this key."; ObjectID = "0rR-qR-wAX"; */
"0rR-qR-wAX.ibShadowedToolTip" = "Manufacturer,与BiosVendor相同。\n\nClover知道该怎么做，不需要设置这个键。";

/* Class = "NSComboBoxCell"; 1GV-ej-OaR.ibShadowedObjectValues[0] = "PCI"; ObjectID = "1GV-ej-OaR"; */
"1GV-ej-OaR.ibShadowedObjectValues[0]" = "PCI";

/* Class = "NSComboBoxCell"; 1GV-ej-OaR.ibShadowedObjectValues[1] = "PCIe 1x"; ObjectID = "1GV-ej-OaR"; */
"1GV-ej-OaR.ibShadowedObjectValues[1]" = "PCIe 1x";

/* Class = "NSComboBoxCell"; 1GV-ej-OaR.ibShadowedObjectValues[2] = "PCIe 2x"; ObjectID = "1GV-ej-OaR"; */
"1GV-ej-OaR.ibShadowedObjectValues[2]" = "PCIe 2x";

/* Class = "NSComboBoxCell"; 1GV-ej-OaR.ibShadowedObjectValues[3] = "PCIe 4x"; ObjectID = "1GV-ej-OaR"; */
"1GV-ej-OaR.ibShadowedObjectValues[3]" = "PCIe 4x";

/* Class = "NSComboBoxCell"; 1GV-ej-OaR.ibShadowedObjectValues[4] = "PCIe 8x"; ObjectID = "1GV-ej-OaR"; */
"1GV-ej-OaR.ibShadowedObjectValues[4]" = "PCIe 8x";

/* Class = "NSComboBoxCell"; 1GV-ej-OaR.ibShadowedObjectValues[5] = "PCIe 16x"; ObjectID = "1GV-ej-OaR"; */
"1GV-ej-OaR.ibShadowedObjectValues[5]" = "PCIe 16x";

/* Class = "NSTextFieldCell"; title = "Serial Number"; ObjectID = "1P4-aL-skS"; */
"1P4-aL-skS.title" = "序列号";

/* Class = "NSTabViewItem"; label = "Slots AAPL injections"; ObjectID = "23f-vn-cRv"; */
"23f-vn-cRv.label" = "内存AAPL注入";

/* Class = "NSTextField"; ibShadowedToolTip = "FirmwareFeaturesMask, appaear mandatory in High Sierra.\nClover knows what to do and there's no need to set this value\nunless Clover is not up to date."; ObjectID = "2I3-h7-8Vo"; */
"2I3-h7-8Vo.ibShadowedToolTip" = "FirmwareFeaturesMask，在High Sierra中强制使用。\n\nClover知道该怎么做，没有必要设置这个值\n除非Clover不是最新的。";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>BoardSerialNumber</key>\n<string>C02032101R5DC771H</string>\nSMBIOS.table2->SerialNumber\n\nDon't mix it with system serial number. Clover will use one specific value here, which needs to be replaced by your own serial number. It is required for working iCloud and iMessage services (initialize MLB RtVariable if missing). The length must be 13-17 digits, consisting of letters from the Latin alphabet and numbers. The serial number used by Clover is most probably banned already."; ObjectID = "5Xj-7c-QmU"; */
"5Xj-7c-QmU.ibShadowedToolTip" = "<key>BoardSerialNumber</key>\n<string>C02032101R5DC771H</string>\nSMBIOS.table2->SerialNumber\n\n\n\n请勿将其与系统序列号混用。 Clover将在此处使用一个特定值，需要使用您自己的序列号替换。它是处理iCloud和iMessage服务所必需的（如果缺少则初始化MLB RtVariable）。长度必须为13-17位，由拉丁字母和数字组成。 Clover使用的序列号很可能已被禁止。";

/* Class = "NSButtonCell"; title = "Trust"; ObjectID = "5b1-ZW-nB9"; */
"5b1-ZW-nB9.title" = "Trust";

/* Class = "CocoaBindingsConnection"; ibShadowedIsNilPlaceholder = "AAPL,slot-name"; ObjectID = "5fE-mV-qPw"; */
"5fE-mV-qPw.ibShadowedIsNilPlaceholder" = "AAPL,slot-name";

/* Class = "NSTextFieldCell"; title = "SmUUID"; ObjectID = "5te-r5-OTH"; */
"5te-r5-OTH.title" = "SmUUID";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>FirmwareFeatures</key>\n<string>0xC0001403</string>\nSMBIOS.table128->FirmwareFeatures\n\nThese digits exceed the standard SMBIOS and are part of Apple's specification. Different real Macs show different values and no description of the meaning exists."; ObjectID = "6SM-nV-h8N"; */
"6SM-nV-h8N.ibShadowedToolTip" = "<key>FirmwareFeatures</key>\n<string>0xC0001403</string>\n\nSMBIOS.table128->FirmwareFeatures\n\n\n\n这些数字超过了标准SMBIOS，是Apple规范的一部分。不同的真实Mac显示不同的值，并且不存在对含义的描述。";

/* Class = "NSTableColumn"; headerCell.title = "Slot*"; ObjectID = "6cM-Hc-Zc2"; */
"6cM-Hc-Zc2.headerCell.title" = "插槽*";

/* Class = "NSTableColumn"; headerToolTip = "Please type a number that represents the number of memory modules actually installed."; ObjectID = "6cM-Hc-Zc2"; */
"6cM-Hc-Zc2.headerToolTip" = "请键入一个代表实际安装的内存模块数的数字。";

/* Class = "NSTextFieldCell"; title = "Bios Version"; ObjectID = "6cp-5V-ICe"; */
"6cp-5V-ICe.title" = "Bios Version";

/* Class = "NSTextFieldCell"; title = "Board-ID"; ObjectID = "6so-sg-efl"; */
"6so-sg-efl.title" = "Board-ID";

/* Class = "NSTableColumn"; headerCell.title = "Serial"; ObjectID = "7W7-sr-rai"; */
"7W7-sr-rai.headerCell.title" = "内存序列号";

/* Class = "NSTextFieldCell"; title = "System"; ObjectID = "7b8-FQ-DYs"; */
"7b8-FQ-DYs.title" = "System";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Mobile</key>\n<true/>\n\nUsually Clover will automatically detect the mobility of a system, \ne.g. if is powered by a battery, needs energy saving, or not. \nChange it to trick the system into thinking that a battery is not available, or otherwise."; ObjectID = "8BJ-2b-1Ms"; */
"8BJ-2b-1Ms.ibShadowedToolTip" = "<key>Mobile</key>\n<true/>\n\n通常Clover会自动检测系统的移动性，\n\n例如 如果是由电池供电，需要节能或不节能。\n\n改变它以欺骗系统认为电池不可用或其他方式。";

/* Class = "NSButtonCell"; title = "Generate New"; ObjectID = "97S-Xi-8lq"; */
"97S-Xi-8lq.title" = "生成新的";

/* Class = "NSTextFieldCell"; title = "SlotCount"; ObjectID = "BQx-pe-Q0F"; */
"BQx-pe-Q0F.title" = "插槽数量";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[0] = "200"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[0]" = "200";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[1] = "266"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[1]" = "266";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[2] = "333"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[2]" = "333";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[3] = "366"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[3]" = "366";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[4] = "400"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[4]" = "400";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[5] = "433"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[5]" = "433";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[6] = "533"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[6]" = "533";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[7] = "667"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[7]" = "667";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[8] = "800"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[8]" = "800";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[9] = "1066"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[9]" = "1066";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[10] = "1333"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[10]" = "1333";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[11] = "1600"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[11]" = "1600";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[12] = "1866"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[12]" = "1866";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[13] = "2000"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[13]" = "2000";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[14] = "2133"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[14]" = "2133";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[15] = "2200"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[15]" = "2200";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[16] = "2400"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[16]" = "2400";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[17] = "2600"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[17]" = "2600";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[18] = "2800"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[18]" = "2800";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[19] = "3000"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[19]" = "3000";

/* Class = "NSComboBoxCell"; BsE-ti-iEN.ibShadowedObjectValues[20] = "3200"; ObjectID = "BsE-ti-iEN"; */
"BsE-ti-iEN.ibShadowedObjectValues[20]" = "3200";

/* Class = "CocoaBindingsConnection"; ibShadowedIsNilPlaceholder = "0x"; ObjectID = "BuA-L1-7IU"; */
"BuA-L1-7IU.ibShadowedIsNilPlaceholder" = "0x";

/* Class = "NSTableColumn"; headerCell.title = "ID*"; ObjectID = "C6y-rY-cfs"; */
"C6y-rY-cfs.headerCell.title" = "ID*";

/* Class = "NSTextFieldCell"; title = "Chassis"; ObjectID = "CCm-K3-zms"; */
"CCm-K3-zms.title" = "Chassis";

/* Class = "NSTextFieldCell"; title = "Text Cell"; ObjectID = "Cai-68-vnq"; */
"Cai-68-vnq.title" = "Text Cell";

/* Class = "NSTextFieldCell"; title = "Location In Chassis"; ObjectID = "CqU-Mt-vpI"; */
"CqU-Mt-vpI.title" = "Location In Chassis";

/* Class = "NSTextFieldCell"; title = "Text"; ObjectID = "EBS-81-h7q"; */
"EBS-81-h7q.title" = "Text";

/* Class = "NSButtonCell"; title = "Mobile"; ObjectID = "EYq-eU-UOZ"; */
"EYq-eU-UOZ.title" = "Mobile";

/* Class = "NSTableColumn"; headerCell.title = "Frequency* (MHz)"; ObjectID = "EsJ-5o-DCN"; */
"EsJ-5o-DCN.headerCell.title" = "频率* (MHz)";

/* Class = "NSComboBoxCell"; H70-61-gOQ.ibShadowedObjectValues[0] = "DDR"; ObjectID = "H70-61-gOQ"; */
"H70-61-gOQ.ibShadowedObjectValues[0]" = "DDR";

/* Class = "NSComboBoxCell"; H70-61-gOQ.ibShadowedObjectValues[1] = "DDR2"; ObjectID = "H70-61-gOQ"; */
"H70-61-gOQ.ibShadowedObjectValues[1]" = "DDR2";

/* Class = "NSComboBoxCell"; H70-61-gOQ.ibShadowedObjectValues[2] = "DDR3"; ObjectID = "H70-61-gOQ"; */
"H70-61-gOQ.ibShadowedObjectValues[2]" = "DDR3";

/* Class = "NSComboBoxCell"; H70-61-gOQ.ibShadowedObjectValues[3] = "DDR4"; ObjectID = "H70-61-gOQ"; */
"H70-61-gOQ.ibShadowedObjectValues[3]" = "DDR4";

/* Class = "NSMenuItem"; title = "Dual Channel"; ObjectID = "I6X-eG-gQz"; */
"I6X-eG-gQz.title" = "双通道";

/* Class = "NSBox"; title = "Box"; ObjectID = "JHE-yU-rxg"; */
"JHE-yU-rxg.title" = "Box";

/* Class = "NSButton"; ibShadowedToolTip = "<key>Trust</key>\n<true/>\n\nUsed to give priority to memory descriptor values found in SMBIOS or SPD. \nChange if your memory is described incorrectly in Mac. Default is <true/>"; ObjectID = "Jfa-jj-im4"; */
"Jfa-jj-im4.ibShadowedToolTip" = "<key>Trust</key>\n<true/>\n\n用于优先考虑SMBIOS或SPD中的内存描述符值。\n\n如果Mac中的内存描述不正确，请更改。 默认值为<true/>";

/* Class = "NSTableView"; ibShadowedToolTip = "Inject custom memory module tables into SMBIOS if original SPD and SMBIOS provide incorrect or incomplete information.\n\nModules - An array of INSTALLED modules, if your slot is empty don't include an entry for it.\n\nFor each module:\n\nSlot - Physical slot location in which the module is installed.\nSize - Size of the module in megabytes.\nFrequency - Speed of the module in megahertz.\nVendor - Memory manufacturer name\nPart - The part number identifier.\nSerial - The module's serial number.\nType - The memory module's type."; ObjectID = "Lpo-Kq-cwa"; */
"Lpo-Kq-cwa.ibShadowedToolTip" = "如果原始SPD和SMBIOS提供不正确或不完整的信息，则将自定义内存模块表注入SMBIOS。\n\n\n\n模块 - 一组已安装的模块，如果您的插槽为空，则不包含条目。\n\n\n\n对于每个模块:\n\n\n\nSlot - 安装模块的物理插槽位置.\n\nSize - 内存的容量（以兆字节为单位）.\n\nFrequency - 模块的速度以Mhz为单位.\n\nVendor - 内存制造商名称.\n\nPart - 部件号标识符.\n\nSerial - 内存的序列号.\n\nType - 内存模块的类型.";

/* Class = "NSTextFieldCell"; title = "Bios Vendor"; ObjectID = "NN2-41-CPM"; */
"NN2-41-CPM.title" = "Bios Vendor";

/* Class = "NSComboBoxCell"; NYq-l3-8MD.ibShadowedObjectValues[0] = "ATI"; ObjectID = "NYq-l3-8MD"; */
"NYq-l3-8MD.ibShadowedObjectValues[0]" = "ATI";

/* Class = "NSComboBoxCell"; NYq-l3-8MD.ibShadowedObjectValues[1] = "NVidia"; ObjectID = "NYq-l3-8MD"; */
"NYq-l3-8MD.ibShadowedObjectValues[1]" = "NVidia";

/* Class = "NSComboBoxCell"; NYq-l3-8MD.ibShadowedObjectValues[2] = "IntelGFX"; ObjectID = "NYq-l3-8MD"; */
"NYq-l3-8MD.ibShadowedObjectValues[2]" = "IntelGFX";

/* Class = "NSComboBoxCell"; NYq-l3-8MD.ibShadowedObjectValues[3] = "LAN"; ObjectID = "NYq-l3-8MD"; */
"NYq-l3-8MD.ibShadowedObjectValues[3]" = "LAN";

/* Class = "NSComboBoxCell"; NYq-l3-8MD.ibShadowedObjectValues[4] = "WIFI"; ObjectID = "NYq-l3-8MD"; */
"NYq-l3-8MD.ibShadowedObjectValues[4]" = "WIFI";

/* Class = "NSComboBoxCell"; NYq-l3-8MD.ibShadowedObjectValues[5] = "Firewire"; ObjectID = "NYq-l3-8MD"; */
"NYq-l3-8MD.ibShadowedObjectValues[5]" = "Firewire";

/* Class = "NSComboBoxCell"; NYq-l3-8MD.ibShadowedObjectValues[6] = "HDMI"; ObjectID = "NYq-l3-8MD"; */
"NYq-l3-8MD.ibShadowedObjectValues[6]" = "HDMI";

/* Class = "NSComboBoxCell"; NYq-l3-8MD.ibShadowedObjectValues[7] = "USB"; ObjectID = "NYq-l3-8MD"; */
"NYq-l3-8MD.ibShadowedObjectValues[7]" = "USB";

/* Class = "NSComboBoxCell"; NYq-l3-8MD.ibShadowedObjectValues[8] = "NVME"; ObjectID = "NYq-l3-8MD"; */
"NYq-l3-8MD.ibShadowedObjectValues[8]" = "NVME";

/* Class = "NSTableColumn"; headerCell.title = "Part"; ObjectID = "NiG-TU-Xa1"; */
"NiG-TU-Xa1.headerCell.title" = "内存型号";

/* Class = "NSMenuItem"; title = "Quad Channel"; ObjectID = "Nnv-Il-gW0"; */
"Nnv-Il-gW0.title" = "四通道";

/* Class = "NSTableColumn"; headerCell.title = "Vendor*"; ObjectID = "Npl-rZ-2fz"; */
"Npl-rZ-2fz.headerCell.title" = "厂商*";

/* Class = "NSTableView"; ibShadowedToolTip = "AAPL,slot-name injector. It allows you to add devices into System Profiler's PCI Cards section. This is a property that is usually injected by DSDT or property strings but this is a wrong way to go.\n\nThe injection of this property requires Name (_SUN, 0x02) to be present in the device's DSDT section. You can set this to any one byte number but 0 and 1 because of compiler optimizations. If you don't use a custom DSDT you may instead set DSDT Mask Fix bits for those devices. Sample:\n\nDevice (GIGE)\n{\n    Name (_ADR, 0x00050000)  // _ADR: Address\n    Name (_SUN, 0x02)  // _SUN: Slot User Number\nDevice - For now it can only be one of these: ATI, NVidia, LAN, WIFI or Firewire.\nID - Must be the same number defined into your DSDT in _SUN.\nName - The string that you want to assign to AAPL,slot-name.\nType - Set to 0 for PCI, 1 for PCIe 1x, 2 for PCIe 2x, etc."; ObjectID = "Oz6-eQ-v70"; */
"Oz6-eQ-v70.ibShadowedToolTip" = "AAPL,slot-name injector. 它允许您将设备添加到System Profiler的PCI卡部分。 这是一个通常由DSDT或属性字符串注入的属性，但这是一种错误的方法。\n\n\n\n注入此属性需要Name（_SUN，0x02）出现在设备的DSDT部分中。 由于编译器优化，您可以将其设置为任何一个字节数，但是0和1。 如果您不使用自定义DSDT，则可以为这些设备设置DSDT Mask Fix位。 例如:\n\n\n\nDevice (GIGE)\n{\n    Name (_ADR, 0x00050000)  // _ADR: Address\n    Name (_SUN, 0x02)  // _SUN: Slot User Number\n\nDevice - 目前它只能是其中之一：ATI，NVidia，LAN，WIFI或Firewire.\n\nID - 必须与_SUN中定义到DSDT中的数字相同.\n\nName - 要分配给AAPL的字符串，slot-name.\n\nType - PCI设置为0，PCIe 1x设置为1，PCIe 2x设置为2，等等。";

/* Class = "CocoaBindingsConnection"; ibShadowedIsNilPlaceholder = "0x"; ObjectID = "P81-Iv-62t"; */
"P81-Iv-62t.ibShadowedIsNilPlaceholder" = "0x";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>BiosVersion</key>\n<string>MB11.YACC.0061.53PH.B03</string>\nWe see only the first, third and fifth groups in System Profiler, but really we should specify the full Boot ROM version in config."; ObjectID = "Pj2-K8-D5s"; */
"Pj2-K8-D5s.ibShadowedToolTip" = "<key>BiosVersion</key>\n<string>MB11.YACC.0061.53PH.B03</string>\n\n我们只看到System Profiler中的第一，第三和第五组，但实际上我们应该在config中指定完整的Boot ROM版本";

/* Class = "NSTextFieldCell"; title = "Manufacturer"; ObjectID = "PvC-BA-WQa"; */
"PvC-BA-WQa.title" = "Manufacturer";

/* Class = "NSTabViewItem"; label = "Memory"; ObjectID = "Qb4-pD-lTs"; */
"Qb4-pD-lTs.label" = "内存信息";

/* Class = "NSTextFieldCell"; title = "Version"; ObjectID = "Qrc-Sg-owx"; */
"Qrc-Sg-owx.title" = "版本";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>SerialNumber</key>\n<string>W8000AAAAA</string>\nClover will use one specific value here per each model, which needs to be replaced by your own serial number. There are two formats of serial number, which one to use depends on the model. The serial number used by Clover is most probably banned already."; ObjectID = "REe-c1-EEN"; */
"REe-c1-EEN.ibShadowedToolTip" = "<key>SerialNumber</key>\n<string>W8000AAAAA</string>\n\nClover将在每个型号中使用一个特定值，需要用您自己的序列号替换。序列号有两种格式，使用哪种格式取决于型号。 Clover使用的序列号很可能已被禁止。";

/* Class = "NSTextField"; ibShadowedToolTip = "Chassis Type found in SMBIOS.table3->Type.\nUsed as an indirect indication for platform mobility.\nClover will use a value according to the set Mac model, like it is used in real Macs,\nso that you don't need to set this key.\nThe effect, except mobility settings, is unclear."; ObjectID = "RiP-da-mau"; */
"RiP-da-mau.ibShadowedToolTip" = "Chassis Type found in SMBIOS.table3->Type.\n\n用作平台移动性的间接指示。\n\nClover将根据设置的Mac模型使用一个值，就像它在真正的Mac中使用一样，\n\n这样您就不需要设置此密钥了。\n\n除移动设置外，其他效果尚不清楚。";

/* Class = "NSTextFieldCell"; title = "Efi Version"; ObjectID = "SOc-81-yEJ"; */
"SOc-81-yEJ.title" = "EFI版本";

/* Class = "NSTextFieldCell"; title = "Firmware Features"; ObjectID = "SRL-32-Psp"; */
"SRL-32-Psp.title" = "Firmware Features";

/* Class = "NSTextFieldCell"; title = "Chassis Type"; ObjectID = "SdV-c7-fVA"; */
"SdV-c7-fVA.title" = "Chassis Type";

/* Class = "NSTableColumn"; headerCell.title = "Name*"; ObjectID = "Utd-xJ-gHs"; */
"Utd-xJ-gHs.headerCell.title" = "名称*";

/* Class = "NSTextField"; ibShadowedToolTip = "ChassisAssetTag, usually found SMBIOS.table3->AssetTag.\n\nThis field is never used with real Macs. We can use it for our own purpose, for example in the HWSensors project."; ObjectID = "VGY-k7-enD"; */
"VGY-k7-enD.ibShadowedToolTip" = "ChassisAssetTag, usually found SMBIOS.table3->AssetTag.\n\n\n\n该字段从未与真正的Mac一起使用。我们可以将它用于我们自己的目的，例如在HWSensors项目中。";

/* Class = "NSTextFieldCell"; title = "Board Version"; ObjectID = "VIJ-lZ-14e"; */
"VIJ-lZ-14e.title" = "Board Version";

/* Class = "NSTextField"; ibShadowedToolTip = "SlotCount - Total count of memory slots in your system. Max 24 (for now)."; ObjectID = "Vbh-ju-kDc"; */
"Vbh-ju-kDc.ibShadowedToolTip" = "SlotCount - 系统中内存插槽的总数。最多24（现在）。";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>Family</key>\n<string>MacBookAir</string>\n\nIt is equal to model without model number.\nClover will use a value according to the set Mac model, like it is used in real Macs,\nso that you don't need to set this key."; ObjectID = "W9H-Od-Bf1"; */
"W9H-Od-Bf1.ibShadowedToolTip" = "<key>Family</key>\n<string>MacBookAir</string>\n\n它等于没有型号的型号。\nClover将根据设置的Mac模型使用一个值，就像它在真正的Mac中使用一样，\n\n这样您就不需要设置此键值了。";

/* Class = "NSTextField"; ibShadowedToolTip = "Chassis Manufacturer like \"Apple Inc.\", \"Asus Inc\" etc.\nClover knows which to use based on ProductName and has no sense to set this key."; ObjectID = "XFi-v8-gNP"; */
"XFi-v8-gNP.ibShadowedToolTip" = "Chassis Manufacturer 如\"Apple Inc.\"，\"Asus Inc\"等。\n\nClover知道基于ProductName使用哪个，并且没有意义设置此内容。";

/* Class = "NSTextFieldCell"; title = "Chassis Manufacturer"; ObjectID = "Xda-xd-vOU"; */
"Xda-xd-vOU.title" = "Chassis Manufacturer";

/* Class = "NSTextField"; ibShadowedToolTip = "EfiVersion, Clover will use a value according to the set Mac model, like it is used in real Macs,\nso that you don't need to set this key."; ObjectID = "ZZX-A9-hFF"; */
"ZZX-A9-hFF.ibShadowedToolTip" = "EfiVersion, Clover将根据设置的Mac模型使用一个值，就像它在真正的Mac中使用一样，\n\n这样您就不需要设置此内容了。";

/* Class = "NSButtonCell"; title = "Generate New"; ObjectID = "aFE-2j-YxC"; */
"aFE-2j-YxC.title" = "生成新的";

/* Class = "NSMenuItem"; title = "Triple Channel"; ObjectID = "bcl-0o-TLR"; */
"bcl-0o-TLR.title" = "三通道";

/* Class = "NSTextFieldCell"; title = "Board Serial Number"; ObjectID = "cDM-0z-QdO"; */
"cDM-0z-QdO.title" = "Board Serial Number";

/* Class = "NSTextField"; ibShadowedToolTip = "Board-ID, like \"Mac-6F01561E16C75D06\" for MacBookPro9,1.\n\nClover knows which to use based on ProductName and has no sense to set this key,\nunless Clover needs an update."; ObjectID = "clk-LC-67V"; */
"clk-LC-67V.ibShadowedToolTip" = "Board-ID, 像MacBookPro9,1的\"Mac-6F01561E16C75D06\"这样子的。\n\n\n\nClover根据ProductName知道要使用哪个，\n并且没有意义设置此内容，\n\n除非Clover需要更新。";

/* Class = "NSSegmentedCell"; d4s-i4-nwM.ibShadowedLabels[0] = "Model Lookup"; ObjectID = "d4s-i4-nwM"; */
"d4s-i4-nwM.ibShadowedLabels[0]" = "机型查找";

/* Class = "NSSegmentedCell"; d4s-i4-nwM.ibShadowedLabels[1] = "Check Coverage"; ObjectID = "d4s-i4-nwM"; */
"d4s-i4-nwM.ibShadowedLabels[1]" = "检查覆盖范围";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>BoardType</key>\n<integer>10</integer>\n\nSMBIOS.table2->BoardType\n\nThis parameter was introduced for the MacPro, which uses 11 (ProcessorBoard) instead of 10 (Motherboard), \napparently for historical reasons. \nThe effect is not clear, however it can be seen in Profiler.\n\nClover knows which to use based on ProductName and has no sense to set this key,\nunles Clover is too old or ProductName isn't yet defined."; ObjectID = "d9W-yU-IOk"; */
"d9W-yU-IOk.ibShadowedToolTip" = "<key>BoardType</key>\n<integer>10</integer>\nSMBIOS.table2->BoardType\n\n\n\n此参数是为MacPro引入的，它使用11（ProcessorBoard）而不是10（主板），\n显然是出于历史原因。\n\n效果尚不清楚，但可以在Profiler中看到。\n\n\n\nClover根据ProductName知道要使用哪个，\n并且没有意义设置此密钥，\n\nunles Clover太旧或ProductName尚未定义。";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>ProductName</key>\n<string>MacBook1,1</string>\n\nYou can set only this value and Clover will adjust the rest of the parameters automatically according to the model, \nso you can leave them out. Otherwise your custom values will be preferred."; ObjectID = "dee-Zv-ADD"; */
"dee-Zv-ADD.ibShadowedToolTip" = "<key>ProductName</key>\n<string>MacBook1,1</string>\n\n您只能设置此值，Clover将根据型号自动调整其余参数，\n\n所以你可以把它们留下来。否则，您的自定义值将是首选。";

/* Class = "NSTableColumn"; headerCell.title = "Device*"; ObjectID = "e0j-eU-Zhc"; */
"e0j-eU-Zhc.headerCell.title" = "设备*";

/* Class = "NSTextFieldCell"; title = "Family"; ObjectID = "fZG-eM-3kc"; */
"fZG-eM-3kc.title" = "Family";

/* Class = "NSTextFieldCell"; title = "Bios"; ObjectID = "g4O-ZS-ZBz"; */
"g4O-ZS-ZBz.title" = "Bios";

/* Class = "NSTextField"; ibShadowedToolTip = "Manufacturer, same as BiosVendor. \nClover knows what to do, no need to set this key."; ObjectID = "gGi-AR-CE7"; */
"gGi-AR-CE7.ibShadowedToolTip" = "Manufacturer, 与BiosVendor相同。\n\nClover知道该怎么做，不需要设置这个内容。";

/* Class = "NSTextFieldCell"; title = "Text Cell"; ObjectID = "ipY-s7-wNe"; */
"ipY-s7-wNe.title" = "Text Cell";

/* Class = "NSTextField"; ibShadowedToolTip = "Board Version, usually is equal to ProductName.\n\nClover knows which to use based on ProductName and has no sense to set this key."; ObjectID = "jay-Z0-iqn"; */
"jay-Z0-iqn.ibShadowedToolTip" = "Board Version,通常等于ProductName。\n\n\n\nClover知道基于ProductName使用哪个，并且没有意义设置此内容。";

/* Class = "NSTextFieldCell"; title = "Channels"; ObjectID = "lEJ-CH-9YM"; */
"lEJ-CH-9YM.title" = "通道";

/* Class = "NSTextFieldCell"; title = "Text Cell"; ObjectID = "m1I-6c-B94"; */
"m1I-6c-B94.title" = "Text Cell";

/* Class = "NSTextFieldCell"; title = "Board"; ObjectID = "md2-zo-6QE"; */
"md2-zo-6QE.title" = "Board";

/* Class = "NSTableColumn"; headerCell.title = "Type*"; ObjectID = "mym-yt-wLL"; */
"mym-yt-wLL.headerCell.title" = "类型*";

/* Class = "CocoaBindingsConnection"; ibShadowedIsNilPlaceholder = "0x"; ObjectID = "nh2-Jo-G2S"; */
"nh2-Jo-G2S.ibShadowedIsNilPlaceholder" = "0x";

/* Class = "NSTableColumn"; headerCell.title = "Size* (MB)"; ObjectID = "npd-3O-Blx"; */
"npd-3O-Blx.headerCell.title" = "容量* (MB)";

/* Class = "NSTextFieldCell"; title = "Product Model"; ObjectID = "o36-JS-hZG"; */
"o36-JS-hZG.title" = "Product Model";

/* Class = "NSTableColumn"; headerCell.title = "Type*"; ObjectID = "o86-sH-MCI"; */
"o86-sH-MCI.headerCell.title" = "类型*";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>SmUUID</key>\n<string>00000000-0000-1000-8000-010203040506</string>\nThis is the UUID, which is written into the SMBIOS table. Apparently it makes sense to fill the last pairs of digits with the MAC address of your ethernet card. This UUID will also be used in case CustomUUID is missing. It also be used to initialize ROM RtVariable (use by iMessage) in case ROM is missing."; ObjectID = "pCR-MR-RPX"; */
"pCR-MR-RPX.ibShadowedToolTip" = "<key>SmUUID</key>\n<string>00000000-0000-1000-8000-010203040506</string>\n\n这是UUID，写入SMBIOS表。显然，用最后一对数字填充以太网卡的MAC地址是有意义的。如果缺少CustomUUID，也将使用此UUID。如果ROM丢失，它还可用于初始化ROM RtVariable（由iMessage使用）。";

/* Class = "NSTextFieldCell"; title = "Text Cell"; ObjectID = "pH3-R0-WFB"; */
"pH3-R0-WFB.title" = "Text Cell";

/* Class = "NSTextFieldCell"; title = "Firmware"; ObjectID = "pXB-Hd-hHg"; */
"pXB-Hd-hHg.title" = "Firmware";

/* Class = "NSMenuItem"; title = "Single Channel"; ObjectID = "sAc-kP-Xgk"; */
"sAc-kP-Xgk.title" = "单通道";

/* Class = "NSTextFieldCell"; title = "Board Manufacturer"; ObjectID = "sMQ-S7-pvh"; */
"sMQ-S7-pvh.title" = "Board Manufacturer";

/* Class = "NSComboBoxCell"; uOS-tn-tSy.ibShadowedObjectValues[0] = "1024"; ObjectID = "uOS-tn-tSy"; */
"uOS-tn-tSy.ibShadowedObjectValues[0]" = "1024";

/* Class = "NSComboBoxCell"; uOS-tn-tSy.ibShadowedObjectValues[1] = "2048"; ObjectID = "uOS-tn-tSy"; */
"uOS-tn-tSy.ibShadowedObjectValues[1]" = "2048";

/* Class = "NSComboBoxCell"; uOS-tn-tSy.ibShadowedObjectValues[2] = "4096"; ObjectID = "uOS-tn-tSy"; */
"uOS-tn-tSy.ibShadowedObjectValues[2]" = "4096";

/* Class = "NSComboBoxCell"; uOS-tn-tSy.ibShadowedObjectValues[3] = "8192"; ObjectID = "uOS-tn-tSy"; */
"uOS-tn-tSy.ibShadowedObjectValues[3]" = "8192";

/* Class = "NSComboBoxCell"; uOS-tn-tSy.ibShadowedObjectValues[4] = "16384"; ObjectID = "uOS-tn-tSy"; */
"uOS-tn-tSy.ibShadowedObjectValues[4]" = "16384";

/* Class = "NSPopUpButton"; ibShadowedToolTip = "Channels - Number of hardware channels supported by your memory chipset, usually two."; ObjectID = "vdg-14-eGI"; */
"vdg-14-eGI.ibShadowedToolTip" = "Channels - 内存芯片组支持的硬件通道数量，通常为两个。";

/* Class = "NSTextFieldCell"; title = "Product Name"; ObjectID = "w1C-6V-ybF"; */
"w1C-6V-ybF.title" = "Product Name";

/* Class = "NSTextField"; ibShadowedToolTip = "<key>PlatformFeature</key>\n<string>0xFFFF</string>\n\nmemory tab disappearing/appearing. Above value makes it disappear.\nMemory tab should show up only if your RAM is not soldered to the motherboard.\nClover knows how this work for every Macs but you can customize it!Clover knows what to do, no need to set this key."; ObjectID = "wK9-vC-BPn"; */
"wK9-vC-BPn.ibShadowedToolTip" = "<key>PlatformFeature</key>\n<string>0xFFFF</string>\n\n内存标签消失/出现。 以上值使其消失。\n\n只有当您的RAM未焊接到主板时，才会显示内存选项卡。\n\nClover知道这对每台Mac都有用，但你可以自定义它！Clover知道该怎么做，不需要设置这个内容。";

/* Class = "NSTextFieldCell"; title = "Text Cell"; ObjectID = "xUg-wm-asM"; */
"xUg-wm-asM.title" = "Text Cell";

/* Class = "NSTextFieldCell"; title = "Chassis  Asset Tag"; ObjectID = "yAB-NZ-jih"; */
"yAB-NZ-jih.title" = "Chassis  Asset Tag";

/* Class = "NSTextFieldCell"; title = "Bios Release Date"; ObjectID = "zoy-5u-qiw"; */
"zoy-5u-qiw.title" = "Bios Release Date";
